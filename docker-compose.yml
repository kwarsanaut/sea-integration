services:
  # Go Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - GIN_MODE=release
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    volumes:
      - ./backend:/app
    networks:
      - sea-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend Dashboard  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sea-network
    depends_on:
      - backend

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sea-network
    command: redis-server --appendonly yes

  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sea_uil
      - POSTGRES_USER=sea_admin
      - POSTGRES_PASSWORD=sea_secure_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sea-network

volumes:
  redis_data:
  postgres_data:

networks:
  sea-network:
    driver: bridge
